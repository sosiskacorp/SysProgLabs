{\rtf1\ansi\ansicpg1251\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red21\green15\blue51;}
{\*\expandedcolortbl;;\cssrgb\c10588\c8627\c25882;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa160\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
Task1.1\
function reverseNumber(num) \{\
    let revNum = 0;\
    while (num > 0) \{\
        revNum = revNum * 10 + num % 10;\
        num = Math.floor(num / 10);\
    \}\
    return revNum;\
\}\
console.log(reverseNumber(123)); // 321\
\
Task1.2\
function removeDuplicates(num) \{\
    const strNum = String(num);\
    const uniqueChars = [...new Set(strNum)];\
    return parseInt(uniqueChars.join(''), 10);\
\}\
console.log(removeDuplicates(111333456)); // 13456\
\
Task1.3\
function countOccurrences(num, digit) \{\
    const strNum = String(num);\
    let count = 0;\
    for (const char of strNum) \{\
        if (char === digit) count++;\
    \}\
    return count;\
\}\
console.log(countOccurrences(1355567, '5')); // 3\
\
Task1.4\
function longestBinarySequence(num) \{\
    const binaryStr = num.toString(2);\
    let maxSeqLength = 0;\
    let currentSeqLength = 0;\
\
    for (const bit of binaryStr) \{\
        if (bit === '0') \{\
            currentSeqLength = 0;\
        \} else \{\
            currentSeqLength++;\
            maxSeqLength = Math.max(maxSeqLength, currentSeqLength);\
        \}\
    \}\
    return maxSeqLength;\
\}\
console.log(longestBinarySequence(9)); // 3\
\
Task2.1\
function findFirstUniqueChar(str) \{\
    const chars = \{\};\
    for (const char of str) \{\
        if (!chars[char]) \{\
            chars[char] = true;\
        \} else \{\
            chars[char] = false;\
        \}\
    \}\
    for (const char in chars) \{\
        if (chars[char]) return char;\
    \}\
    return null;\
\}\
console.log(findFirstUniqueChar('\uc0\u1092 \u1099 \u1074 \u1092 \u1072 \u1074 \u1099 \u1072 \u1087 \u1088 \u1089 ')); // '\u1087 '\
\
Task2.2\
function generateRandomString(length) \{\
    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\
    let result = '';\
    for (let i = 0; i < length; i++) \{\
        result += characters.charAt(Math.floor(Math.random() * characters.length));\
    \}\
    return result;\
\}\
console.log(generateRandomString(5)); \
\
Task2.3\
function getUniqueChars(str) \{\
    const chars = new Set();\
    for (const char of str) \{\
        chars.add(char);\
    \}\
    return Array.from(chars).join('');\
\}\
console.log(getUniqueChars('\uc0\u1087 \u1086 \u1079 \u1074 \u1086 \u1083 \u1103 \u1077 \u1090 \u1082 \u1086 \u1087 \u1080 \u1088 \u1086 \u1074 \u1072 \u1090 \u1100 \u1090 \u1077 \u1082 \u1089 \u1090 \u1080 \u1079 ')); // '\u1087 \u1086 \u1079 \u1074 \u1083 \u1103 \u1077 \u1090 \u1082 \u1080 \u1088 \u1072 \u1100 \u1089 '```\
}